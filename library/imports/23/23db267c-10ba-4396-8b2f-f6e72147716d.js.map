{"version":3,"sources":["assets\\JS\\cardRegion\\js_cardList.js"],"names":["CardList","aCard","cardInfo","info","next","length","top","last","push","acard","front","pop","temp","getLength","getTop","getLast","getCardInfo","clear","isEmpty","cc","Class","Component","properties","cardPerfab","Prefab","init","myCardList","topCard","console","log","show","instantiate","node","addChild","getComponent","getNextCard","destroy","dispatchEvent","Event","EventCustom"],"mappings":"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","sourceRoot":"/","sourcesContent":["\n\n\nfunction CardList(){\n  \n    //定义一张卡牌 ， 内部储存信息\n    var aCard = function( cardInfo ){\n        this.info = cardInfo;\n        this.next = null;\n    }\n\n    var length = 0;\n    var top = null ,last= null;\n\n    this.push = function( cardInfo ){\n        let acard = new aCard(cardInfo);\n        \n\n        if( length == 0 ){ //第一次\n            front = acard ;\n        }else{\n            last.next = acard;\n        }\n\n        last = acard;\n        length++;\n        return true;\n    },\n\n    this.pop = function(){\n        let temp ; //临时指针\n        temp = front;\n        front = front.next;\n        length--;\n        //delete temp;\n    },\n\n    this.getLength = function()\n    {\n        return length;\n    },\n\n    this.getTop = function(){\n        return front;\n    },\n\n    this.getLast = function(){\n        return last;\n    },\n\n    this.getCardInfo = function()\n    {\n        return front.info;\n    },\n\n    /*this.isEmpty = function(){\n        if( this.getLength()  ) return false;\n        else return true;\n    },*/\n\n    this.clear = function()\n    {\n        while( this.isEmpty() == false )\n        {\n            this.pop();\n        }\n    }\n\n};\n\n//var CardList = require(\"Queue\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cardPerfab: cc.Prefab\n    },\n\n    init:function () {  \n        /*//初始话时会初始化 多 张卡牌\n        //和data区差不多，改变了函数名称  \n        for( var i=0; i<this.cardItems.length; i++ )\n        {\n            let item = cc.instantiate(this.cardPerfab);\n            this.node.addChild(item);  //创建新节点\n\n            let data = this.cardItems[i];\n            let isTopCard = 0;\n            if(i==1) isTopCard = 1; //顶端卡牌才显示\n            item.getComponent('js_cardTemplate').init(data,isTopCard);\n        }*/\n\n\n        //创建队列\n        this.myCardList = new CardList();\n        this.topCard = null;\n\n    },\n\n    push:function( cardInfo )\n    {\n        this.myCardList.push( cardInfo );\n        console.log( this.myCardList.getLength() );\n    },\n\n     //只有再show的时候才创造新节点并放入topCard中\n    show: function( )\n    {\n        let info = this.myCardList.getCardInfo();\n\n        this.topCard = cc.instantiate(this.cardPerfab); //创建新节点\n        this.node.addChild(this.topCard);    //加入到子节点下\n\n        console.log(info);\n\n        this.topCard.getComponent('js_cardTemplate').init(info);\n    },\n\n\n    getNextCard : function(){\n\n        //这里应该是动画代码\n        //完成动画后 先pop\n        this.myCardList.pop();\n        console.log( this.myCardList.getLength() );\n        this.topCard.destroy();\n        \n        if( this.myCardList.getLength() == 0 )\n        {\n            //空了会要求页面重新提供新卡牌，应该可以使用事件传递机制；\n            this.node.dispatchEvent( new cc.Event.EventCustom('getNewCard',1) );\n        }\n        else{\n            //pop后可以直接show\n            this.show();\n        }\n        \n    }\n\n    /*getNextCard:function(){\n        for( var i=1; i<=this.cardItems.length; i++ )\n        {\n            let data = this.cardItems[i];  //这里存放的是数据\n            let item = this.node.children[i]; //这里是节点\n            if( item.active == true ) //找到顶端的牌\n            {\n               \n                item.getComponent('js_cardTemplate').moveOff();\n                let nextCard = (i+1)%this.cardItems.length ;\n                if( nextCard == 0 ) nextCard = this.cardItems.length;\n               \n                //console.log(\"i am in js_cardlist , the top card is:\" + i + \" \\n i will get next card!: \" + nextCard );\n\n                nextItem = this.node.children[nextCard];\n                nextItem.getComponent('js_cardTemplate').moveUp();\n\n               break;\n            }\n        }\n    },*/\n\n});\n"]}