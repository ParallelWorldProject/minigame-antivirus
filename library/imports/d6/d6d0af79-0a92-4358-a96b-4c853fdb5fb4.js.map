{"version":3,"sources":["assets\\JS\\js_home.js"],"names":["CardRegion","require","DataRegion","cc","Class","Component","properties","homeAnim","type","Animation","cardRegion","dataRegion","backStage","Node","onLoad","information","dataInfo","budget","resource","health","popularity","card_1","id","from","name","date","picUrl","optionA","optionB","card_2","card_3","start","init","updateInfo","push","show","node","on","console","log","updateData","updateCard","select","getNextCard"],"mappings":"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","sourceRoot":"/","sourcesContent":["//1: 加载所有游戏部件 与 动画\n//2: 存储信息并进行前后端总体交互\n\n\n\n\nconst CardRegion = require('js_cardRegion');\nconst DataRegion = require('js_dataRegion');\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        homeAnim: {  //动画\n            default: null,\n            type: cc.Animation\n        },\n        cardRegion: {  //卡片区域\n            default: null,\n            type: CardRegion\n        },\n        dataRegion: {  //数值区域\n            default: null,\n            type: DataRegion\n        },\n        backStage: { //后端\n            default: null,\n            type: cc.Node\n        },\n    },\n\n     onLoad:function () {\n        //请求后端加载\n\n        //。。。\n        //加载完成后得到  初始化的后台信息 和 初始化的3张卡牌 这里把3张卡片先都写出来，等后端接口完成再实现依次调用\n        this.information = {\n            dataInfo : {\n                budget:4 ,\n                resource:3 ,\n                health: 2,\n                popularity:1,\n            },\n            card_1:\n                {\n                id : 1,\n                from:\"1\" ,\n                name:\"1\",\n                date:\"11\",\n                information:\"111\",\n                picUrl:'000',\n                optionA:[1,1,1,1],\n                optionB:[-1,-1,-1,-1] \n                },\n            card_2:\n            {\n                id : 2,\n                from:\"2\" ,\n                name:\"2\",\n                date:\"22\",\n                information:\"2222\",\n                picUrl:'000',\n                optionA:[2,2,2,2],\n                optionB:[-2,-2,-2,-2] \n                },\n            card_3:\n            {\n                id : 3,\n                from:\"3\" ,\n                name:\"3\",\n                date:\"33\",\n                information:\"3333\",\n                picUrl:'000',\n                optionA:[3,3,3,3],\n                optionB:[-3,-3,-3,-3] \n                },\n        }\n\n       \n\n        \n\n     },\n\n    start:function () {\n        //初始化两个区域\n        this.dataRegion.init();\n        this.cardRegion.init();\n\n\n        //使用数据更新数据区域\n        this.dataRegion.updateInfo(this.information.dataInfo);\n\n        //往卡牌区域依次加入（一张）卡牌\n        this.cardRegion.push(this.information.card_1);\n        this.cardRegion.push(this.information.card_2);\n        this.cardRegion.push(this.information.card_3);\n\n        \n        //显示数据和卡牌\n        //this.dataRegion.show();\n        this.cardRegion.show();\n\n\n\n\n\n\n        //设置按键监听事件 //还不清楚这么用监听事件传递参数，只能这样写\n        this.node.on('SelectA', function (  ) {\n            console.log( 'button pressed A and i got it' );  //1：ac 2：de\n            this.updateData(1);//其他参数略 \n            this.updateCard(1);//参数略\n           \n          },this);\n\n        this.node.on('SelectB', function (  ) {\n        console.log( 'button pressed B and i got it' );  //1：ac 2：de\n        this.updateData(0);//其他参数略 \n        this.updateCard(0);//参数略\n        \n        },this);\n\n\n        //获得新卡牌\n        this.node.on('getNewCard', function (  ) {\n            \n            \n            //模拟获得新卡片后 push再次\n            this.cardRegion.push(this.information.card_1);\n            this.cardRegion.push(this.information.card_2);\n            this.cardRegion.push(this.information.card_3);\n            console.log( 'so now i  get new card' );  \n            \n            this.cardRegion.show();\n\n        },this);\n        \n    },\n\n\n    updateData : function(select)\n    {\n       if ( select == 1 ) //select 影响计算\n        {\n            this.information.dataInfo.budget += 1;\n            this.information.dataInfo.resource += 2;\n            this.information.dataInfo.health += 3;\n            this.information.dataInfo.popularity += 4;\n        }\n        else if ( select == 0 )\n        {\n            this.information.dataInfo.budget -= 1;\n            this.information.dataInfo.resource -= 2;\n            this.information.dataInfo.health -= 3;\n            this.information.dataInfo.popularity -= 4;\n        }\n            \n       \n       this.dataRegion.updateInfo(this.information.dataInfo);  //计算完后更新数据\n    },\n\n    updateCard : function(select)\n    {\n        //现在只实现显示数组中其他卡牌\n        this.cardRegion.getNextCard();\n    }\n\n    \n}\n);\n"]}